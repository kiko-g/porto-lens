import { type NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { signIn, signOut, useSession } from 'next-auth/react';

import { api } from '~/utils/api';
import DarkModeSwitch from '../components/layout/DarkModeSwitch';

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Porto Lens</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main
        className="flex min-h-screen w-full flex-col bg-gradient-to-b from-blue-800 via-blue-700 to-blue-500 
      dark:from-slate-800 dark:via-slate-800 dark:to-slate-700"
      >
        <section className="grid flex-1 grid-cols-1 gap-8 md:grid-cols-2">
          {/* Left side */}
          <div className="flex flex-col items-start justify-center px-12 py-12">
            <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
              <span className="text-blue-400">Porto</span> Lens
            </h1>
            <p className="mt-2 text-lg text-white">
              The place to go when you&apos;re not at the stadium.
            </p>
            <p className="tracking-tight text-gray-300">For Portistas by Portistas.</p>

            <div className="absolute bottom-4 left-4 text-sm font-light text-red-300">
              This is a work in progress ❗️❗️
              <ul>
                <li>
                  <Link className="hover:underline" href="/api/vsports/seasons/2023">
                    Try the API
                  </Link>
                </li>
              </ul>
            </div>
          </div>

          <div className="flex flex-col bg-white/10 dark:bg-white/5">
            <div className="flex items-center justify-end gap-3 py-4 px-4">
              <AuthShowcase />
              <DarkModeSwitch large />
            </div>
          </div>
        </section>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      {(sessionData || secretMessage) && (
        <p className="text-center text-2xl text-white">
          {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
          {secretMessage && <span> - {secretMessage}</span>}
        </p>
      )}
      <button
        className="rounded bg-navy/25 px-4 py-2 font-semibold text-white no-underline transition hover:bg-navy/50"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? 'Sign out' : 'Sign in'}
      </button>
    </div>
  );
};
